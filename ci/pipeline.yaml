resource_types:
- name: file-url
  type: registry-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest
- name: slack
  type: registry-image
  source:
    repository: arbourd/concourse-slack-alert-resource

config:
- &allIsPublic   true
- &baseImageRepo ubuntu
- &gitBotName    kind-on-c pipeline
- &gitBotEmail   hhorl+kindonc@pivotal.io
- k8s-branches:
  - &k8sBranchMaster        master
  - &k8sBranchCurrent       release-1.21
  - &k8sBranchCurrentMinus1 release-1.20
  - &k8sBranchCurrentMinus2 release-1.19
- &imageBuildingFiles
  - Dockerfile
  - ci/tasks/build-image.*
  - ci/tasks/update-image-revision.*
- &kindBuildingFiles
  - ci/tasks/artefact-image-*
  - ci/tasks/build-kind.*
- &kindOnCGitSource
  uri: git@github.com:pivotal-k8s/kind-on-c
  branch: dev
  private_key: ((github.push_key))
  git_config:
  - name: user.name
    value: *gitBotName
  - name: user.email
    value: *gitBotEmail
- &defaultTest ./kind-on-c/ci/t/default.sh
- &testTask
  task: run-tests
  file: kind-on-c/kind.yaml
  privileged: true
  params:
    KIND_TESTS: *defaultTest
- &artefactImageExtractTask
  task: artefact-image-extract
  file: kind-on-c/ci/tasks/artefact-image-extract.yaml
- &artefactImageBakeTask
  task: artefact-image-bake
  privileged: true
  file: kind-on-c/ci/tasks/artefact-image-bake.yaml
- &notify
  on_success:
    put: success-message
    resource: slack
    params:
      alert_type: fixed
  on_failure:
    put: failure-message
    resource: slack
    params:
      alert_type: broke
  on_error:
    put: error-message
    resource: slack
    params:
      alert_type: broke
- &jobDefaults
  public: *allIsPublic
  serial: true
  <<: *notify
- &resourceDefaults
  public: *allIsPublic
# To safe some cpu cycles:
- &noCheck
  # virtually disable checking of the resource
  check_every: "8760h"
- &slowCheck
  # for resources we don't trigger on and it does not matter too much if we get
  # the most recent version
  check_every: "20m"

resources:
- name: base-image
  <<: *resourceDefaults
  type: registry-image
  icon: layers-triple-outline
  source:
    repository: *baseImageRepo
- name: image
  <<: *resourceDefaults
  type: registry-image
  icon: layers-triple
  source: ((crs.kind-on-c))
- name: build-artefacts
  <<: *resourceDefaults
  icon: application-export
  type: registry-image
  source: ((crs.build-artefacts))
- name: kind-build-tasks
  <<: *resourceDefaults
  type: git
  icon: source-branch
  source:
    << : *kindOnCGitSource
    paths: *kindBuildingFiles
- name: image-build
  <<: *resourceDefaults
  type: git
  icon: docker
  source:
    << : *kindOnCGitSource
    paths: *imageBuildingFiles
- name: kind-on-c-dev
  <<: *resourceDefaults
  type: git
  icon: source-branch
  source:
    << : *kindOnCGitSource
    ignore_paths: *imageBuildingFiles
- name: kind-on-c-master
  <<: *resourceDefaults
  type: git
  icon: source-merge
  source:
    << : *kindOnCGitSource
    branch: master
  <<: *noCheck
- name: kind-release
  <<: *resourceDefaults
  type: github-release
  icon: application-import
  source:
    owner: kubernetes-sigs
    repository: kind
    access_token: ((github.token))
    pre_release: true
- name: kind-git-main
  old_name: kind-git-master
  <<: *resourceDefaults
  type: git
  icon: source-fork
  source:
    uri: https://github.com/kubernetes-sigs/kind
    branch: main
- name: k8s-git-current-minus-2
  <<: *resourceDefaults
  type: git
  icon: kubernetes
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: *k8sBranchCurrentMinus2
  <<: *slowCheck
- name: k8s-git-current-minus-1
  <<: *resourceDefaults
  type: git
  icon: kubernetes
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: *k8sBranchCurrentMinus1
  <<: *slowCheck
- name: k8s-git-current
  <<: *resourceDefaults
  type: git
  icon: kubernetes
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: *k8sBranchCurrent
  <<: *slowCheck
- name: k8s-git-master
  <<: *resourceDefaults
  type: git
  icon: kubernetes
  source:
    uri: https://github.com/kubernetes/kubernetes
    branch: *k8sBranchMaster
  <<: *slowCheck
- name: container-diff-bin
  <<: *resourceDefaults
  type: file-url
  icon: vector-difference
  source:
    url: https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64
    filename: container-diff
  <<: *slowCheck
- name: slack
  <<: *resourceDefaults
  type: slack
  icon: chat-processing
  source:
    url: ((slack.url))
  <<: *noCheck

jobs:
- name: update-image
  <<: *jobDefaults
  on_success:
    put: success-message
    resource: slack
    params:
      alert_type: success
      message: New kind-on-c image pushed and promoted
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - get: base-image
        trigger: true
      - get: image-build
        trigger: true
      - get: kind-on-c-dev
      - get: container-diff-bin
  - task: build
    file: image-build/ci/tasks/build-image.task.yaml
    privileged: true
    params:
      BASE_IMAGE_REPO: *baseImageRepo
  - put: image-push
    resource: image
    params:
      image: image/image.tar
    inputs:
    - image
  # - task: test new image ## TODO
  - task: update-image-revision
    image: image # use image from the builder task
    file: kind-on-c-dev/ci/tasks/update-image-revision.task.yaml
    params:
      GIT_AUTHOR_NAME:  *gitBotName
      GIT_AUTHOR_EMAIL: *gitBotEmail
  - put: kind-on-c-dev
    params:
      repository: kind-on-c-dev
      rebase: true

- name: latest-kind-release
  <<: *jobDefaults
  plan:
  - &commonTestInputsForKindRelease
    in_parallel:
    - get: kind-on-c
      resource: kind-on-c-dev
      trigger: true
      passed: &allFeatureTests
      - feature--custom-kind-config
      - feature--ha-control-plane
      - feature--output-node-image-and-rootfs
      - feature--user-inputs-and-outputs
      - feature--metal-lb-and-exposed-services
      - feature--bring-your-own-image
    - get: kind-release
      trigger: true
      params:
        globs:
        - kind-linux-amd64
      passed: *allFeatureTests
  - *testTask
- name: latest-kind-release-with-k8s-master
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-master
  - << : *testTask
- name: latest-kind-release-with-k8s-current
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-current
  - << : *testTask
- name: latest-kind-release-with-k8s-current-minus-1
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-current-minus-1
  - << : *testTask
- name: latest-kind-release-with-k8s-current-minus-2
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindRelease
    - get: k8s-git
      resource: k8s-git-current-minus-2
  - << : *testTask

- name: promote
  <<: *jobDefaults
  on_success:
    put: success-message
    resource: slack
    params:
      alert_type: success
      message: New kind-on-c promoted from dev to master
  plan:
  - get: kind-on-c-dev
    trigger: true
    passed:
    # all tests for the kind release
    - latest-kind-release
    - latest-kind-release-with-k8s-master
    - latest-kind-release-with-k8s-current
    - latest-kind-release-with-k8s-current-minus-1
    - latest-kind-release-with-k8s-current-minus-2
    # all tests for kind master
    - kind-master
    - kind-master-with-k8s-current-minus-2
    - kind-master-with-k8s-current-minus-1
    - kind-master-with-k8s-current
    - kind-master-with-k8s-master
  - put: kind-on-c-master
    params:
      repository: kind-on-c-dev

- name: build-kind-from-master
  <<: *jobDefaults
  plan:
  - in_parallel:
    - get: kind-on-c
      resource: kind-build-tasks
      trigger: true
    - get: kind-git-main
      trigger: true
  - task: build
    file: kind-on-c/ci/tasks/build-kind.task.yaml
  - <<: *artefactImageBakeTask
    input_mapping:
      files: kind-bin
  - put: build-artefacts
    params:
      image: image/image.tar

- name: kind-master
  <<: *jobDefaults
  plan:
  - &commonTestInputsForKindMaster
    do:
    - in_parallel:
        steps:
        - get: kind-on-c
          resource: kind-on-c-dev
          trigger: true
          passed: *allFeatureTests
        - get: build-artefacts
          passed: [ build-kind-from-master ]
          trigger: true
    - <<: *artefactImageExtractTask
      input_mapping:
        image: build-artefacts
      output_mapping:
        files: kind-release
  - *testTask
- name: kind-master-with-k8s-current-minus-2
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-current-minus-2
  - << : *testTask
- name: kind-master-with-k8s-current-minus-1
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-current-minus-1
  - << : *testTask
- name: kind-master-with-k8s-current
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-current
  - << : *testTask
- name: kind-master-with-k8s-master
  <<: *jobDefaults
  plan:
  - in_parallel:
    - *commonTestInputsForKindMaster
    - get: k8s-git
      resource: k8s-git-master
  - << : *testTask

# additional "feature" tests
- name: feature--ha-control-plane
  <<: *jobDefaults
  plan:
  - in_parallel: &commonTestInputsForFeatures
    - get: kind-on-c
      resource: kind-on-c-dev
      trigger: true
    - get: kind-release
      trigger: true
      params:
        globs:
        - kind-linux-amd64
  - << : *testTask
    params:
      KIND_CONFIG: ./kind-on-c/ci/t/ha-control-plane.kind-config.yaml
      KIND_TESTS:  ./kind-on-c/ci/t/ha-control-plane.sh
- name: feature--custom-kind-config
  <<: *jobDefaults
  plan:
  - in_parallel: *commonTestInputsForFeatures
  - << : *testTask
    params:
      KIND_CONFIG: ./kind-on-c/ci/t/custom-kind-config.kind-config.yaml
      KIND_TESTS:  ./kind-on-c/ci/t/custom-kind-config.sh
- name: feature--output-node-image-and-rootfs
  <<: *jobDefaults
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForFeatures
    - get: k8s-git
      resource: k8s-git-current-minus-1
  - << : *testTask
    task: export-node-image
    params:
      EXPORT_NODE_IMAGE: 1
      EXPORT_NODE_ROOTFS: 1
      KIND_TESTS: '' # skip bringing up the cluster, only create the image
  - task: run-rootfs
    image: exported-node-rootfs # the rootfs of the node image built by kind, from the previous task
    file: kind-on-c/ci/t/exported-node-rootfs.task.yaml
  - << : *testTask
    task: run-tests-with-previously-exported-node-image
    input_mapping:
      node-image: exported-node-image
    params:
      EXPECTED_BRANCH: *k8sBranchCurrentMinus1
      KIND_CONFIG: ./kind-on-c/ci/t/exported-node-image.kind-config.yaml
      KIND_TESTS:  ./kind-on-c/ci/t/exported-node-image.sh
- name: feature--user-inputs-and-outputs
  <<: *jobDefaults
  plan:
  - in_parallel:
    - in_parallel: *commonTestInputsForFeatures
    # those are just random inputs, to show how one could aggregate multiple
    # inputs and prepare them for kind-on-c
    - { get: input-1 , resource: image-build }
    - { get: input-2 , resource: image-build }
  - task: aggregate-inputs
    file: kind-on-c/ci/t/aggregate-inputs.task.yaml
  - << : *testTask
    task: use-inputs-and-populate-outputs
    params:
      KIND_PRE_START: ./kind-on-c/ci/t/inputs-outputs.pre-start.sh
    input_mapping:
      inputs: agg-inputs
  - task: check-aggregated-outputs
    file: kind-on-c/ci/t/check-aggregated-outputs.task.yaml
- name: feature--metal-lb-and-exposed-services
  <<: *jobDefaults
  plan:
  - in_parallel: *commonTestInputsForFeatures
  - << : *testTask
    params:
      INSTALL_METALLB: 1
      KIND_TESTS: ./kind-on-c/ci/t/metallb.sh
- name: feature--bring-your-own-image
  <<: *jobDefaults
  plan:
  - in_parallel: *commonTestInputsForFeatures
  # 1.) bake a custom kind-on-c task image -- we base it on the default
  #     kind-on-c task image, so that we have all the needed dependencies
  #     already there
  - task: build-custom-image
    file: kind-on-c/ci/tasks/build-custom-image.task.yaml
    privileged: true
    params:
      BASE_REPO: ((crs.kind-on-c.repository))
      BASE_TAG: ((crs.kind-on-c.tag))
      CUSTOM_FILE: &customFile /can_we_haz_custom_image
      CUSTOM_CONTENT: &customContent 'yes, u can haz custom image!'
    output_mapping:
      image: custom-image
  # 2.) provide a rootfs via `image` so that the task does not run the image
  #     configured in the task file
  - <<: *testTask
    image: custom-image
    params:
      EXPECTED_FILE: *customFile
      EXPECTED_CONTENT: *customContent
      DEFAULT_TEST: *defaultTest
      KIND_TESTS: |
        ./kind-on-c/ci/t/custom-image.sh && "${DEFAULT_TEST}"

groups:
- name: all
  jobs:
  - promote
  - latest-kind-release
  - latest-kind-release-with-k8s-master
  - latest-kind-release-with-k8s-current
  - latest-kind-release-with-k8s-current-minus-1
  - latest-kind-release-with-k8s-current-minus-2
  - build-kind-from-master
  - kind-master
  - kind-master-with-k8s-current-minus-2
  - kind-master-with-k8s-current-minus-1
  - kind-master-with-k8s-current
  - kind-master-with-k8s-master
  - feature--custom-kind-config
  - feature--ha-control-plane
  - feature--output-node-image-and-rootfs
  - feature--user-inputs-and-outputs
  - feature--metal-lb-and-exposed-services
  - feature--bring-your-own-image
- name: image
  jobs:
  - update-image
- name: kind-from-release
  jobs:
  - latest-kind-release
  - latest-kind-release-with-k8s-master
  - latest-kind-release-with-k8s-current
  - latest-kind-release-with-k8s-current-minus-1
  - latest-kind-release-with-k8s-current-minus-2
- name: kind-from-master
  jobs:
  - build-kind-from-master
  - kind-master
  - kind-master-with-k8s-current-minus-2
  - kind-master-with-k8s-current-minus-1
  - kind-master-with-k8s-current
  - kind-master-with-k8s-master
- name: features
  jobs:
  - feature--custom-kind-config
  - feature--ha-control-plane
  - feature--output-node-image-and-rootfs
  - feature--user-inputs-and-outputs
  - feature--metal-lb-and-exposed-services
  - feature--bring-your-own-image
- name: promote
  jobs:
  - promote
